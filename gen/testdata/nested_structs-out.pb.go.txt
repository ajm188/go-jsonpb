// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package test

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
    "github.com/ajm188/go-jsonpb"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TestComplexRequest_ComplexType int32

const (
	TestComplexRequest_T1 TestComplexRequest_ComplexType = 0
	TestComplexRequest_T2 TestComplexRequest_ComplexType = 2
)

var TestComplexRequest_ComplexType_name = map[int32]string{
	0: "T1",
	2: "T2",
}

var TestComplexRequest_ComplexType_value = map[string]int32{
	"T1": 0,
	"T2": 2,
}

func (x TestComplexRequest_ComplexType) String() string {
	return proto.EnumName(TestComplexRequest_ComplexType_name, int32(x))
}

func (TestComplexRequest_ComplexType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{2, 0}
}

type TestRequest struct {
	TestField            string   `protobuf:"bytes,1,opt,name=test_field,json=testField,proto3" json:"test_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestRequest) MarshalJSON() ([]byte, error) {
    return jsonpb.Marshal(m)
}

func (m *TestRequest) Reset()         { *m = TestRequest{} }
func (m *TestRequest) String() string { return proto.CompactTextString(m) }
func (*TestRequest) ProtoMessage()    {}
func (*TestRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *TestRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestRequest.Unmarshal(m, b)
}
func (m *TestRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestRequest.Marshal(b, m, deterministic)
}
func (m *TestRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestRequest.Merge(m, src)
}
func (m *TestRequest) XXX_Size() int {
	return xxx_messageInfo_TestRequest.Size(m)
}
func (m *TestRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestRequest proto.InternalMessageInfo

func (m *TestRequest) GetTestField() string {
	if m != nil {
		return m.TestField
	}
	return ""
}

type TestResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestResponse) Reset()         { *m = TestResponse{} }
func (m *TestResponse) String() string { return proto.CompactTextString(m) }
func (*TestResponse) ProtoMessage()    {}
func (*TestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *TestResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestResponse.Unmarshal(m, b)
}
func (m *TestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestResponse.Marshal(b, m, deterministic)
}
func (m *TestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestResponse.Merge(m, src)
}
func (m *TestResponse) XXX_Size() int {
	return xxx_messageInfo_TestResponse.Size(m)
}
func (m *TestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestResponse proto.InternalMessageInfo

type TestComplexRequest struct {
	F1                   string                         `protobuf:"bytes,1,opt,name=f1,proto3" json:"f1,omitempty"`
	F2                   *TestRequest                   `protobuf:"bytes,2,opt,name=f2,proto3" json:"f2,omitempty"`
	Type                 TestComplexRequest_ComplexType `protobuf:"varint,3,opt,name=type,proto3,enum=test.TestComplexRequest_ComplexType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *TestComplexRequest) MarshalJSON() ([]byte, error) {
    return jsonpb.Marshal(m)
}

func (m *TestComplexRequest) Reset()         { *m = TestComplexRequest{} }
func (m *TestComplexRequest) String() string { return proto.CompactTextString(m) }
func (*TestComplexRequest) ProtoMessage()    {}
func (*TestComplexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{2}
}

func (m *TestComplexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestComplexRequest.Unmarshal(m, b)
}
func (m *TestComplexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestComplexRequest.Marshal(b, m, deterministic)
}
func (m *TestComplexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestComplexRequest.Merge(m, src)
}
func (m *TestComplexRequest) XXX_Size() int {
	return xxx_messageInfo_TestComplexRequest.Size(m)
}
func (m *TestComplexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestComplexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestComplexRequest proto.InternalMessageInfo

func (m *TestComplexRequest) GetF1() string {
	if m != nil {
		return m.F1
	}
	return ""
}

func (m *TestComplexRequest) GetF2() *TestRequest {
	if m != nil {
		return m.F2
	}
	return nil
}

func (m *TestComplexRequest) GetType() TestComplexRequest_ComplexType {
	if m != nil {
		return m.Type
	}
	return TestComplexRequest_T1
}

func init() {
	proto.RegisterEnum("test.TestComplexRequest_ComplexType", TestComplexRequest_ComplexType_name, TestComplexRequest_ComplexType_value)
	proto.RegisterType((*TestRequest)(nil), "test.TestRequest")
	proto.RegisterType((*TestResponse)(nil), "test.TestResponse")
	proto.RegisterType((*TestComplexRequest)(nil), "test.TestComplexRequest")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 238 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x74, 0xb8, 0xb8, 0x43, 0x52,
	0x8b, 0x4b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x64, 0x21, 0x4a, 0xe2, 0xd3, 0x32,
	0x53, 0x73, 0x52, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x38, 0x41, 0x22, 0x6e, 0x20, 0x01,
	0x25, 0x3e, 0x2e, 0x1e, 0x88, 0xea, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0xa5, 0x05, 0x8c, 0x5c,
	0x42, 0x20, 0x01, 0xe7, 0xfc, 0xdc, 0x82, 0x9c, 0xd4, 0x0a, 0x98, 0x29, 0x7c, 0x5c, 0x4c, 0x69,
	0x86, 0x50, 0xdd, 0x4c, 0x69, 0x86, 0x42, 0x8a, 0x5c, 0x4c, 0x69, 0x46, 0x12, 0x4c, 0x0a, 0x8c,
	0x1a, 0xdc, 0x46, 0x82, 0x7a, 0x60, 0x37, 0x20, 0x59, 0x1a, 0xc4, 0x94, 0x66, 0x24, 0x64, 0xc1,
	0xc5, 0x52, 0x52, 0x59, 0x90, 0x2a, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x67, 0xa4, 0x82, 0x50, 0x84,
	0x6a, 0xb4, 0x1e, 0x94, 0x1b, 0x52, 0x59, 0x90, 0x1a, 0x04, 0xd6, 0xa1, 0x24, 0xcb, 0xc5, 0x8d,
	0x24, 0x28, 0xc4, 0xc6, 0xc5, 0x14, 0x62, 0x28, 0xc0, 0x00, 0xa6, 0x8d, 0x04, 0x98, 0x8c, 0x3c,
	0xb9, 0x58, 0x40, 0xc6, 0x08, 0x39, 0x72, 0x09, 0x22, 0x19, 0xe7, 0x9b, 0x5a, 0x92, 0x91, 0x9f,
	0x22, 0x24, 0x81, 0xcb, 0x1e, 0x29, 0x21, 0x64, 0x67, 0x42, 0x7c, 0xeb, 0x24, 0x1c, 0x25, 0x98,
	0x9e, 0xaf, 0x5f, 0x5c, 0x94, 0xac, 0x0f, 0x0e, 0x41, 0x7d, 0x90, 0x8a, 0x24, 0x36, 0x30, 0xdb,
	0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x91, 0x0d, 0x42, 0x23, 0x5b, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TestClient is the client API for Test service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TestClient interface {
	TestComplexMethod(ctx context.Context, in *TestComplexRequest, opts ...grpc.CallOption) (*TestResponse, error)
}

type testClient struct {
	cc *grpc.ClientConn
}

func NewTestClient(cc *grpc.ClientConn) TestClient {
	return &testClient{cc}
}

func (c *testClient) TestComplexMethod(ctx context.Context, in *TestComplexRequest, opts ...grpc.CallOption) (*TestResponse, error) {
	out := new(TestResponse)
	err := c.cc.Invoke(ctx, "/test.Test/TestComplexMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TestServer is the server API for Test service.
type TestServer interface {
	TestComplexMethod(context.Context, *TestComplexRequest) (*TestResponse, error)
}

// UnimplementedTestServer can be embedded to have forward compatible implementations.
type UnimplementedTestServer struct {
}

func (*UnimplementedTestServer) TestComplexMethod(ctx context.Context, req *TestComplexRequest) (*TestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestComplexMethod not implemented")
}

func RegisterTestServer(s *grpc.Server, srv TestServer) {
	s.RegisterService(&_Test_serviceDesc, srv)
}

func _Test_TestComplexMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestComplexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TestServer).TestComplexMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/test.Test/TestComplexMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TestServer).TestComplexMethod(ctx, req.(*TestComplexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Test_serviceDesc = grpc.ServiceDesc{
	ServiceName: "test.Test",
	HandlerType: (*TestServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TestComplexMethod",
			Handler:    _Test_TestComplexMethod_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}
